{
  "version": 3,
  "sources": ["../../jwt-decode/lib/atob.js", "../../jwt-decode/lib/base64_url_decode.js", "../../jwt-decode/lib/index.js"],
  "sourcesContent": ["/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill (input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n", "var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n", "'use strict';\n\nvar base64_url_decode = require('./base64_url_decode');\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = 'InvalidTokenError';\n\nmodule.exports = function (token,options) {\n  if (typeof token !== 'string') {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};\n\nmodule.exports.InvalidTokenError = InvalidTokenError;\n"],
  "mappings": ";;;;;AAAA;AAAA;AAKA,QAAI,QAAQ;AAEZ,aAAS,sBAAsB,SAAS;AACtC,WAAK,UAAU;AAAA,IACjB;AAEA,0BAAsB,YAAY,IAAI,MAAM;AAC5C,0BAAsB,UAAU,OAAO;AAEvC,aAAS,SAAU,OAAO;AACxB,UAAI,MAAM,OAAO,KAAK,EAAE,QAAQ,OAAO,EAAE;AACzC,UAAI,IAAI,SAAS,KAAK,GAAG;AACvB,cAAM,IAAI,sBAAsB,mEAAmE;AAAA,MACrG;AACA;AAAA,YAEM,KAAK,GAAG,IAAI,QAAQ,MAAM,GAAG,SAAS;AAAA;AAAA,QAE1C,SAAS,IAAI,OAAO,KAAK;AAAA;AAAA,QAEzB,CAAC,WAAW,KAAK,KAAK,IAAI,KAAK,KAAK,SAAS;AAAA;AAAA,QAG3C,OAAO,KAAK,UAAU,OAAO,aAAa,MAAM,OAAO,KAAK,KAAK,EAAE,IAAI;AAAA,QACzE;AAEA,iBAAS,MAAM,QAAQ,MAAM;AAAA,MAC/B;AACA,aAAO;AAAA,IACT;AAGA,WAAO,UAAU,OAAO,WAAW,eAAe,OAAO,QAAQ,OAAO,KAAK,KAAK,MAAM,KAAK;AAAA;AAAA;;;ACrC7F;AAAA;AAAA,QAAI,OAAO;AAEX,aAAS,iBAAiB,KAAK;AAC7B,aAAO,mBAAmB,KAAK,GAAG,EAAE,QAAQ,QAAQ,SAAU,GAAG,GAAG;AAClE,YAAI,OAAO,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,EAAE,YAAY;AACpD,YAAI,KAAK,SAAS,GAAG;AACnB,iBAAO,MAAM;AAAA,QACf;AACA,eAAO,MAAM;AAAA,MACf,CAAC,CAAC;AAAA,IACJ;AAEA,WAAO,UAAU,SAAS,KAAK;AAC7B,UAAI,SAAS,IAAI,QAAQ,MAAM,GAAG,EAAE,QAAQ,MAAM,GAAG;AACrD,cAAQ,OAAO,SAAS,GAAG;AAAA,QACzB,KAAK;AACH;AAAA,QACF,KAAK;AACH,oBAAU;AACV;AAAA,QACF,KAAK;AACH,oBAAU;AACV;AAAA,QACF;AACE,gBAAM;AAAA,MACV;AAEA,UAAG;AACD,eAAO,iBAAiB,MAAM;AAAA,MAChC,SAAS,KAAK;AACZ,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,IACF;AAAA;AAAA;;;AChCA;AAAA;AAEA,QAAI,oBAAoB;AAExB,aAAS,kBAAkB,SAAS;AAClC,WAAK,UAAU;AAAA,IACjB;AAEA,sBAAkB,YAAY,IAAI,MAAM;AACxC,sBAAkB,UAAU,OAAO;AAEnC,WAAO,UAAU,SAAU,OAAM,SAAS;AACxC,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI,kBAAkB,yBAAyB;AAAA,MACvD;AAEA,gBAAU,WAAW,CAAC;AACtB,UAAI,MAAM,QAAQ,WAAW,OAAO,IAAI;AACxC,UAAI;AACF,eAAO,KAAK,MAAM,kBAAkB,MAAM,MAAM,GAAG,EAAE,GAAG,CAAC,CAAC;AAAA,MAC5D,SAAS,GAAG;AACV,cAAM,IAAI,kBAAkB,8BAA8B,EAAE,OAAO;AAAA,MACrE;AAAA,IACF;AAEA,WAAO,QAAQ,oBAAoB;AAAA;AAAA;",
  "names": []
}
